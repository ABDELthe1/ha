# Generated by Django 4.2.7 on 2025-06-04 22:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('SECRETAIRE', 'Secrétaire'), ('MEDECIN', 'Médecin')], default='SECRETAIRE', max_length=20, verbose_name='Rôle')),
                ('nom_complet', models.CharField(max_length=100, verbose_name='Nom complet')),
                ('actif', models.BooleanField(default=True, verbose_name='Compte actif')),
                ('date_creation_compte', models.DateTimeField(auto_now_add=True, verbose_name='Date de création du compte')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=50, verbose_name='Prénom')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('telephone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format valide.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Téléphone')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('notes_administratives', models.TextField(blank=True, null=True, verbose_name='Notes administratives')),
                ('date_creation_fiche', models.DateTimeField(auto_now_add=True, verbose_name='Date de création de la fiche')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Medecin',
            fields=[
                ('utilisateur', models.OneToOneField(limit_choices_to={'role': 'MEDECIN'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('specialite', models.CharField(max_length=100, verbose_name='Spécialité médicale')),
                ('telephone_professionnel', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format valide.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Téléphone professionnel')),
                ('horaires_disponibilite', models.TextField(blank=True, help_text='Horaires de disponibilité au format JSON', null=True, verbose_name='Horaires de disponibilité')),
            ],
            options={
                'verbose_name': 'Médecin',
                'verbose_name_plural': 'Médecins',
            },
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_heure_debut', models.DateTimeField(verbose_name='Date et heure de début')),
                ('duree_minutes', models.PositiveIntegerField(default=30, verbose_name='Durée en minutes')),
                ('type_consultation', models.CharField(choices=[('CONSULTATION', 'Consultation'), ('SUIVI', 'Suivi'), ('URGENCE', 'Urgence'), ('VISITE_DOMICILE', 'Visite à domicile'), ('AUTRE', 'Autre')], default='CONSULTATION', max_length=50, verbose_name='Type de consultation')),
                ('statut_rdv', models.CharField(choices=[('PLANIFIE', 'Planifié'), ('CONFIRME', 'Confirmé'), ('ANNULE', 'Annulé'), ('TERMINE', 'Terminé')], default='PLANIFIE', max_length=30, verbose_name='Statut du rendez-vous')),
                ('notes_rdv', models.TextField(blank=True, null=True, verbose_name='Notes du rendez-vous')),
                ('date_creation_rdv', models.DateTimeField(auto_now_add=True, verbose_name='Date de création du RDV')),
                ('date_derniere_maj_rdv', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='gestion_rdv.patient', verbose_name='Patient')),
                ('secretaire_creation', models.ForeignKey(limit_choices_to={'role': 'SECRETAIRE'}, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='Secrétaire responsable')),
            ],
            options={
                'verbose_name': 'Rendez-vous',
                'verbose_name_plural': 'Rendez-vous',
                'ordering': ['date_heure_debut'],
            },
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['nom', 'prenom'], name='gestion_rdv_nom_4568ca_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['telephone'], name='gestion_rdv_telepho_c9e777_idx'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='rendezvous',
            name='medecin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='gestion_rdv.medecin', verbose_name='Médecin'),
        ),
        migrations.AddIndex(
            model_name='rendezvous',
            index=models.Index(fields=['patient'], name='gestion_rdv_patient_c87d52_idx'),
        ),
        migrations.AddIndex(
            model_name='rendezvous',
            index=models.Index(fields=['medecin', 'date_heure_debut'], name='gestion_rdv_medecin_403b88_idx'),
        ),
        migrations.AddIndex(
            model_name='rendezvous',
            index=models.Index(fields=['statut_rdv'], name='gestion_rdv_statut__3a4707_idx'),
        ),
        migrations.AddIndex(
            model_name='rendezvous',
            index=models.Index(fields=['date_heure_debut'], name='gestion_rdv_date_he_8e3f38_idx'),
        ),
        migrations.AddConstraint(
            model_name='rendezvous',
            constraint=models.UniqueConstraint(fields=('medecin', 'date_heure_debut'), name='unique_medecin_creneau'),
        ),
    ]
